#!/bin/sh

SOURCEFILE="$1"
shift

if [ ! -f "$SOURCEFILE" ]; then
    echo "error: no SOURCEFILE" >&2
    exit 1
fi

echo "// this file was generated by https://github.com/dbandstra/zig-gl"
echo "//  version: $1"
shift
for GL_EXTENSION in "$@"; do
    echo "//  + $GL_EXTENSION"
done
echo
echo "const builtin = @import(\"builtin\");"
echo
echo "const cc: builtin.CallingConvention ="
echo "    if (builtin.os.tag == .windows and builtin.arch == .i386)"
echo "        .StdCall"
echo "    else"
echo "        .C;"
echo
grep '^pub const khronos' "$SOURCEFILE" | sed 's/^pub //' | sort
echo
grep '^pub const struct___GL' "$SOURCEFILE" | sed 's/^pub //' | sort
echo
echo "pub const namespace = struct {"
grep '^pub const GL[^_]' "$SOURCEFILE" | sort
echo
grep '^pub const GL_' "$SOURCEFILE" | sort
echo
perl -n -e '
if (/^pub extern var (gl[a-zA-Z0-9_]+): \?fn \((.*)\) callconv\(.+?\) (.+);$/) {
    print "var _$1: fn ($2) callconv(cc) $3 = undefined;\n";
}' < "$SOURCEFILE" | sort
echo
perl -n -e '
if (/^pub extern var (gl[a-zA-Z0-9_]+): \?fn \((.*)\) callconv\(.+?\) (.+);$/) {
    my $name = $1;
    my @args = split(/, ?/, $2);
    my $ret = $3;
    for my $i (0 .. $#args) {
        $args[$i] = "arg$i: ${args[$i]}";
    }
    my $args = join(", ", @args);
    print "pub inline fn $name($args) $ret { ";
    if ($ret ne "void") {
        print "return ";
    }
    print "_$name(";
    for my $i (0 .. $#args) {
        if ($i > 0) {
            print ", ";
        }
        print "arg$i";
    }
    print "); }\n";
}' < "$SOURCEFILE" | sort
echo "};"
echo
echo "pub const extensions = [_][:0]const u8{"
for GL_EXTENSION in "$@"; do
    echo "\"$GL_EXTENSION\","
done
echo "};"
echo
echo "pub const Command = struct {"
echo "    name: [:0]const u8,"
echo "    ptr: **const c_void,"
echo "};"
echo
echo "pub const commands = [_]Command{"
perl -n -e '
if (/^pub extern var (gl[a-zA-Z0-9_]+): \?fn/) {
    print ".{ .name = \"$1\", .ptr = \@ptrCast(**const c_void, &namespace._$1) },\n";
}' < "$SOURCEFILE" | sort
echo "};"
